%% ****************************************************************************
%% ViewIdReplace.pidoc - Released 2017/01/15 00:00:00 UTC
%% ****************************************************************************
%%
%% This file is part of ViewIdReplace Script Version 1.4
%%
%% Copyright (C) 2012-2017 Mike Schuster. All Rights Reserved.
%% Copyright (C) 2003-2017 Pleiades Astrophoto S.L. All Rights Reserved.
%%
%% Redistribution and use in both source and binary forms, with or without
%% modification, is permitted provided that the following conditions are met:
%%
%% 1. All redistributions of source code must retain the above copyright
%%    notice, this list of conditions and the following disclaimer.
%%
%% 2. All redistributions in binary form must reproduce the above copyright
%%    notice, this list of conditions and the following disclaimer in the
%%    documentation and/or other materials provided with the distribution.
%%
%% 3. Neither the names "PixInsight" and "Pleiades Astrophoto", nor the names
%%    of their contributors, may be used to endorse or promote products derived
%%    from this software without specific prior written permission. For written
%%    permission, please contact info@pixinsight.com.
%%
%% 4. All products derived from this software, in any form whatsoever, must
%%    reproduce the following acknowledgment in the end-user documentation
%%    and/or other materials provided with the product:
%%
%%    "This product is based on software from the PixInsight project, developed
%%    by Pleiades Astrophoto and its contributors (http://pixinsight.com/)."
%%
%%    Alternatively, if that is where third-party acknowledgments normally
%%    appear, this acknowledgment must be reproduced in the product itself.
%%
%% THIS SOFTWARE IS PROVIDED BY PLEIADES ASTROPHOTO AND ITS CONTRIBUTORS
%% "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
%% TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
%% PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL PLEIADES ASTROPHOTO OR ITS
%% CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
%% EXEMPLARY OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, BUSINESS
%% INTERRUPTION; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; AND LOSS OF USE,
%% DATA OR PROFITS) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
%% CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
%% ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
%% POSSIBILITY OF SUCH DAMAGE.
%% ****************************************************************************

\documentclass PIScriptDoc

\script ViewIdReplace

\keywords {
   view identifier replacement
}

\author {
   Mike Schuster
}

\copyright {
   2012-2017 Mike Schuster. All Rights Reserved.
}

\brief {
   Script that renames a view with some or all matches of a pattern replaced by a replacement.
}

\description {
   ViewIdReplace renames a view with some or all matches of a pattern replaced by a replacement. The pattern may be a regular expression of the form /pattern/flags or a string. The replacement is a string. A number of special replacement patterns are supported.

   The script provides an alternative to manually renaming multiple views when the renaming can be expressed as a regular expression or string replacement.

   Typical usage is as follows: Launch the script, specify pattern and replacement, drag an instance to the workspace, dismiss the script, drag the instance onto one or more views to rename.

   Multiple instances of the script with different patterns and replacements may be created in the workspace. Drag the appropriate instance onto the view.

   This document describes ViewIdReplace Version 1.4.

   \subsection {Example: string pattern} {
      \image [marginleft:36pt] Usage/clone_work_dialog.png

      Replace the string "clone" with the replacement "work". Example input "integration_clone", output "integration_work".
   }

   \subsection {Example: regular expression pattern} {
      \image [marginleft:36pt] Usage/clone_clone_star_work.png

      Replace the string "clone" followed by zero or more occurances of the string "_clone" with the replacement "work". Example input "integration_clone_clone", output "integration_work". Pattern * matches the preceeding parenthesized item zero or more times.
   }

   \subsection {Example: append string} {
      \image [marginleft:36pt] Usage/append_work.png

      Append the string "_work". Example input "integration", output "integration_work". Pattern $ matches end of input.
   }

   \subsection {Example: prepend string} {
      \image [marginleft:36pt] Usage/prepend_work.png

      Prepend the string "work_". Example input "integration", output "work_integration". Pattern ^ matches beginning of input.
   }

   \subsection {Example: replace any} {
      \image [marginleft:36pt] Usage/any_work.png

      Replace any string with "work". Example input "light_012", output "work". Pattern . matches any character. Pattern * matches the preceeding item zero or more times.
   }

   \subsection {Example: append string, preserve suffix} {
      \image [marginleft:36pt] Usage/append_preserve_work.png

      Append the string "_work" while preserving suffix underscore and digits. Example input "light_012", output "light_work_012". Pattern \bslash{d} matches any digit. Pattern * matches the preceeding item zero or more times. The parenthesized item is remembered as the 1st parenthesized submatch string. Pattern $ matches end of input. The replacement pattern $1 inserts the 1st parenthesized submatch string.
   }
}

\usage {
   \subsection {ViewIdReplace} {
      \image [marginleft:36pt] Usage/clone_work_dialog.png
      \image [marginleft:36pt] Usage/clone_clone_star_work.png

      \division { Pattern } {
         A regular expression or a string.

         If a regular expression of the form /pattern/flags, the match or matches are replaced with the string specified by replacement parameter.

         If a string, it is treated as a verbatim string. Only the first occurrence will be replaced.

         An abbreviated list of pattern meanings in regular expressions.

         \table [unnumbered, caption, header, marginleft:36pt, width:500pt] {
            { \left {Character classes} }
            { {Pattern} {Meaning} }
            { {.} {Matches any single character.} }
            { {\bslash{d}} {Matches any digit character, equivalent to \[0-9\].} }
            { {\bslash{D}} {Matches any character that is not a digit, equivalent to \[^0-9\].} }
         }

         \table [unnumbered, caption, header, marginleft:36pt, width:500pt] {
            { \left {Character sets} }
            { {Pattern} {Meaning} }
            { {\[xyz\] \n \[a-c\]} {A character set. Matches any one of the enclosed characters. You can specify a range of characters by using a hyphen.} }
            { {\[^xyz\] \n \[^a-c\]} {A negated or complemented character set. That is, it matches anything that is not enclosed in the brackets. You can specify a range of characters by using a hyphen.} }
         }

         \table [unnumbered, caption, header, marginleft:36pt, width:500pt] {
            { \left {Alternation} }
            { {Pattern} {Meaning} }
            { {x|y} {Matches either x or y.} }
         }

         \table [unnumbered, caption, header, marginleft:36pt, width:500pt] {
            { \left {Boundaries} }
            { {Pattern} {Meaning} }
            { {^} {Matches beginning of input.} }
            { {$} {Matches end of input.} }
         }

         \table [unnumbered, caption, header, marginleft:36pt, width:500pt] {
            { \left {Grouping and back references} }
            { {Pattern} {Meaning} }
            { {(x)} {Matches x and remembers the match as a parenthesized submatch string.} }
            { {\bslash{n}} {Where n is a positive integer, a back reference to the substring matching the nth parenthesized submatch string.} }
            { {(?:x)} {Matches x but does not remember the match.} }
         }

         \table [unnumbered, caption, header, marginleft:36pt, width:500pt] {
            { \left {Quantifiers} }
            { {Pattern} {Meaning} }
            { {x*} {Matches the preceding item x 0 or more times.} }
            { {x+} {Matches the preceding item x 1 or more times.} }
            { {x?} {Matches the preceding item x 0 or 1 time.} }
            { {x*? \n x+? \n x??} {Matches the preceding item x like *, +, and ?, however the match is the smallest possible match.} }
         }

         \table [unnumbered, caption, header, marginleft:36pt, width:500pt] {
            { \left {Assertions} }
            { {Pattern} {Meaning} }
            { {x(?=y)} {Matches x only if x is followed by y.} }
            { {x(?!y)} {Matches x only if x is not followed by y.} }
         }

         If specified, flags can have any combination of the following values:

         \table [unnumbered, header, marginleft:36pt, width:500pt] {
            { {Flag} {Meaning} }
            { {g} {Global match; find all matches rather than stopping after the first match.} }
            { {i} {Ignore character case.} }
         }
      }

      \division { Replacement } {
         The string that replaces the substring specified by the pattern parameter. A number of special replacement patterns are supported:

         \table [unnumbered, header, marginleft:36pt, width:500pt] {
            { {Pattern} {Inserts} }
            { {$&} {Inserts the matched substring.} }
            { {$`} {Inserts the portion of the string that precedes the matched substring.} }
            { {$'} {Inserts the portion of the string that follows the matched substring.} }
            { {$n} {Where n is a positive integer, inserts the nth parenthesized submatch string, provided the pattern parameter was a regular expression.} }
         }

         Replacement characters not in the set \[A-Za-z0-9_\] are themselves replaced with underscore.

         If the output is not a unique view id, one or more digits will be appended.
      }
   }

   \subsection { Button pane } {
      \image [marginleft:36pt] Usage/clone_work_dialog.png
      \image [marginleft:36pt] Usage/clone_clone_star_work.png

      \definition {
         { \image Usage/new_instance.png } {
            Create a new instance.
         }

         { \image Usage/browse_documentation.png  } {
            Open a browser to view documentation.
         }

         { \image Usage/reset.png } {
            Reset all parameters.
         }

         { \image Usage/diagnostics.png } {
            Check the pattern for syntax errors.
         }

         { Dismiss } {
            Dismiss the dialog.
         }

      }
   }
}

\make

%% ****************************************************************************
%% ViewIdReplace.pidoc - Released 2017/01/15 00:00:00 UTC
