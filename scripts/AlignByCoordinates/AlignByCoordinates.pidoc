\documentclass PIScriptDoc

\script {
   AlignByCoordinates
}

\keywords {
   alignment, coordinates
}

\author {
   Andrés del Pozo
}

\copyright {
   2013, Andrés del Pozo
}

\brief {
   Script for aligning deep sky astronomical images using their coordinates.
}

\introduction{
   The alignment of images is a basic tool for processing of astronomical images.
   PixInsight has an excellent tool (\tref{StarAlignment}{StarAlignment}) for aligning images
   that works comparing the overlapping areas between the target image and a reference image and trying to find a match between them.
   Then computes a lineal transformation that converts the geometry of the target image so that it is similar to the reference image.

   \s{AlignByCoordinates} uses a different approach to the alignment:
   Instead of matching an image against other, it requires that the images are plate solved.
   Knowing the coordinates of each pixel of the image the script can reproject them so the geometries of the
   images are compatible.

   The geometry of the image has to be defined using the convention \e{FITS World Coordinate System (WCS)}\ref GreisenWCS \ref CalabrettaCelestial .
   This can be done using the scripts \sref{ImageSolver}{ImageSolver} or \sref{ManualImageSolver}{ManualImageSolver}.
   There are also other applications that can solve images using this convention such as PinPoint.

   AlignByCoordinates can cope with two kind of geometric distortions:
    \list{
      {
         \s{Projection distortions \label Projection}:
         When two images are not centered in the same point they have different projections.
         The difference in the projections causes that there is not a lineal transformation between them.
         This effect is stronger in images with short focal length.
         \vs
         The following animation shows an example of this effect.
         The images have been generated from catalog data and the only geometric distortions are caused by the projection.
         As can be seen in the animation, the Orion asterism has different distortions in each frame.
         \figure{ \image[width:100\%;height:auto]{ProjectionDistortion.gif}}
      }
      {
         \s{Geometric optical aberrations \label Aberrations}:
         The plate solving of astronomical images is usually done supposing that the optical system can be modeled by
         a \xref{http://en.wikipedia.org/wiki/Gnomonic_projection}{Gnomonic projection} \ref WikiProjection{.}
         However, many lenses or telescopes don't follow strictly this projection.
         The images from these optical systems can not be solved with high accuracy using only lineal polynomials.
         \sref{ImageSolver}{ImageSolver} and \sref{ManualImageSolver}{ManualImageSolver} can use higher degree polynomials
         to model the geometric distortions. AlignByCoordinates can use the distortion model generated by the plate solving process for fixing it when
         aligning images with different distortions.
         \vs
         The following image is the distortion map from an image taken with a 17mm lens.
         It shows the difference between the image and an "ideal" lens that generates images using Gnomonic projection.
         \figure{ \image[width:100\%;height:auto]{Aberrations.png}}
      }
    }
}

\usage {
   \center{ \image{MainDialog.png}}
   \subsection {Execution mode \label Mode}
   {
      The script has three modes operation that can be chosen using the \e{Execution mode} box.
      \definition
      {
         { Align images against reference \label Align }
         {
            This mode uses an image as a \lref{Reference}{reference} and aligns all the images in the \lref{Target}{target list} against this.
            For each target image a new image is generated that has the same geometry as the reference image.

            This option is useful for stacking images that cover the same area.
         }

         {Undistort images}
         {
            This mode generates a new image for each target image removing the \lref{Aberrations}{geometric optical aberrations}.
            The geometry of the output images keep the characteristics of the original geometries (projection, resolution, rotation and dimensions)
            but removing the aberrations.
            This mode doesn't use a reference image.
         }
      }
   }
   \subsection { Images }
   {
      \definition
      {
         {Reference image \label Reference}
         {
            The reference image for the execution mode \lref{Align}{Align images against reference}
            can be selected using the \e{Reference image} list box.
            This parameter is not used when the \lref{Mode}{Execution mode} is "Undistort image".

            You can select as reference an open image or a file.
            The list enumerates initially the open images in PixInsight.
            With the \e{Browse} button you can add a file to the list.
         }

         {Target images \label Target}
         {
            The script can use the active image in PixInsight as target image or it can use a list of images.
            You can add files to the list using the button \e{Add files} or you can add open windows using the
            button \e{Add windows}.
            The button \e{Remove images} removes the selected images from the list.
            The button \e{Clear list} removes all the images.
         }
      }
   }

   \subsection { Options}
   {
      \center{ \image{Options.png}}
      \definition
      {
         {Quality}
         {
            This option determines the quality of the output:
            \list
            {
               {
                  \s{Fast \label Fast}: This option calculates the alignment transformation for a few pixels
                  and then approximates the transformation for the rest of pixels using splines.
                  The quality of the transformation is usually good enough for most uses but it is not guaranteed that
                  all the pixels are correct.
               }
               {
                  \s{High quality \label HQ}: This option calculates the alignment transformation for all the pixels in
                  the image.
                  The quality of the result is the best possible but the process can be quite slow,
                  up to several minutes for each image.
               }
            }
         }
         {Pixel interpolation}
         {
            This option determines the algorithm for pixel interpolation when the \lref{HQ}{High quality} option is used.
            The available values are the same used in \tref{StarAlignment}{StarAlignment}.
         }
         {Clamping threshold}
         {
            This parameter is explained in the documentation of \tref{StarAlignment}{StarAlignment}.
         }
      }
   }

   \subsection {Output images}
   {
      \center{ \image{Output.png}}
      \definition{
         { Output directory }
         {
            Path of the directory where the aligned images will be written.
            If it is empty, the images will be written at the same directories as the source images.

            This parameter is not used when aligning windows since in this case the images are not written to the disk.
         }
         {Output file suffix}
         {
            This suffix will be appended to the filename when saving each image.
         }
         {Overwrite existing files}
         {
            If this option is not checked the alignment of an image fails when the output file already exists.
         }
         {On error}
         {
            This parameter determines what to do when there are errors during the process.
            The options are \e{Continue}, \e{Abort} and \e{Ask user}.
         }
      }
   }
}

\section{Tips}
{
   \list
   {
      {
         Since AlignByCoordinates uses the coordinates of the image as the sole method for aligning the images,
         the coordinates solution must be of very high precision.
         It should have residuals of less than one pixel.
         \vs
         For narrow field images taken with long focal lengths (usually more than 1000mm) and lenses of high optical quality,
         the solution usually doesn't need distortion correction.
         However, images taken with short focal lengths (<100mm) or lenses with strong aberrations (for example, Newton telescopes with coma),
         the coordinates should be calculated using distortion correction in order to achieve the required precision.
         These coordinates solutions can be calculated using both \sref{ImageSolver}{ImageSolver} and \sref{ManualImageSolver}{ManualImageSolver}.
      }
   }
}

\section{Limitations}
{
   \list
   {
      {
         Since this script requires to know the geometry of the images it can only work with images that can be
         plate solved.
         This is usually only possible for deep sky images where enough stars can be detected and matched to a catalog.
      }
   }
}

\reference GreisenWCS {  E. W. Greisen, M. R. Calabretta (2002) \e { \xref {http://fits.gsfc.nasa.gov/fits_wcs.html} {Representations of World Coordinates in FITS } },  Astronomy & Astrophysics, 395, 1061-1075}

\reference CalabrettaCelestial {  M. R. Calabretta, E. W. Greisen (2002) \e { \xref {http://fits.gsfc.nasa.gov/fits_wcs.html} {Representations of Celestial Coordinates in FITS } },  Astronomy & Astrophysics, 395, 1077-1122}

\reference WikiProjection {  Wikipedia contributors, \e{ \xref{http://en.wikipedia.org/wiki/Gnomonic_projection}{Gnomonic projection}}, Wikipedia, The Free Encyclopedia}

\relatedscript ImageSolver
\relatedscript ManualImageSolver
\relatedtool StarAlignment
\relatedtool DynamicAlignment
\relatedtool GradientMergeMosaic

\make
